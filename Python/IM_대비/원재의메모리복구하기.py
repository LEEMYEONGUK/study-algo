"""
10
01010101010101010101010101010101010101010101010101
01
1000110010011111010110000100100000000001001
10011010001110111010111010001100101101
00110101100001010000110010111
101111110101010100111100101111001
01110011110001110
1010101001010101010101010100111111
01010100010100101100111010100010111111011001011000
1111100101101110000
"""

"""
#1 49
#2 1
##3 19
##4 23
#5 15
##6 19
#7 6
##8 27
#9 30
##10 8
"""

# 특정 비트를 골라 고칠때 메모리 끝까지 덮어씌움
T = int(input())

for test_case in range(1, T + 1):
    # 초기값 M
    M = list(input())
    N = len(M)

    # 고치는 횟수
    cnt = 0
    # 첫번째 비트가 1인경우 고치는 횟수 1 증가
    if M[0] == "1":
        cnt += 1
    # 초기값 M 을 순회하면 메모리 값이 바뀌는 횟수 체크
    for i in range(N - 1):
        if M[i] != M[i + 1]:
            cnt += 1
    # 결과 출력
    print(f"#{test_case} {cnt}")

# 규칙 : 0에서 1 혹은 1에서 0으로 바뀔때 횟수 1번이 추가됨
# 첫번째 비트가 1인 경우 횟수 1번 추가 (비트수가 4라면 0000 에서 시작하기 때문)
# 첫번째 비트가 0인 경우 횟수 추가할 필요 없음

# 000
# 001 - 1
# 010 - 2
# 011 - 1
# 100 - 2
# 101 - 3
# 110 - 2
# 111 - 1
